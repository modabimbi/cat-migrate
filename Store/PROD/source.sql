


CREATE INDEX ACCOUNT_SUBSCRIBER_INDEX1 ON ACCOUNT_SUBSCRIBER (RANGE_MAP_EXTERNAL_ID);
CREATE INDEX ACCOUNT_SUBSCRIBER_INDEX2 ON ACCOUNT_SUBSCRIBER (ADDTL_NOTIF_EXTERNAL_ID);

CREATE INDEX MVNO_ASSIGNED_NUMBER_INDEX1 ON MVNO_ASSIGNED_NUMBER (TN);

CREATE INDEX MVNO_ASSIGNED_NUMBER_INDEX2 ON MVNO_ASSIGNED_NUMBER (MODIFIED_DATE);

ALTER TABLE ACCOUNT_SUBSCRIBER 
ADD (MIGRATE VARCHAR2(1) );

CREATE INDEX ACCOUNT_SUBSCRIBER_INDEX3 ON ACCOUNT_SUBSCRIBER (MIGRATE);
ALTER TABLE INVD_MAIN 
ADD (MIGRATE NUMBER(1) );
CREATE INDEX INVD_MAIN_INDEX1 ON INVD_MAIN (MIGRATE);

DROP TABLE TEMP_MIGRATE_LOG_NUMBER;
CREATE TABLE TEMP_MIGRATE_LOG_NUMBER
  AS (SELECT SECONDARY_CODE  , EXTERNAL_ID , INVENTORY_TYPE_ID ,INVENTORY_ID ,'N' MIGRATE_LOG FROM INVD_MAIN m);
CREATE INDEX TEMP_MIGRATE_LOG_NUMBER_INDEX1 ON TEMP_MIGRATE_LOG_NUMBER (MIGRATE_LOG);



DROP TABLE TEMP_MIGRATE_INV_MAPPING;
CREATE TABLE TEMP_MIGRATE_INV_MAPPING
  AS (
    select DISTINCT A.Range_Map_External_ID , A.ADDTL_NOTIF_EXTERNAL_ID , A.SUBSCR_NO, 1 MIGRATE
    from ACCOUNT_SUBSCRIBER A 
    where Range_Map_External_ID is not null 
    and ADDTL_NOTIF_EXTERNAL_ID is not null
    AND SUBSTR(ADDTL_NOTIF_EXTERNAL_ID , 0 , 2 ) = '52' 
  );
  CREATE INDEX TEMP_MIGRATE_INV_MAPPING_IDX1 ON TEMP_MIGRATE_INV_MAPPING (MIGRATE);
  CREATE INDEX TEMP_MIGRATE_INV_MAPPING_IDX2 ON TEMP_MIGRATE_INV_MAPPING (SUBSCR_NO);
  
   delete TEMP_MIGRATE_INV_MAPPING where SUBSCR_NO in (select  min(SUBSCR_NO) from TEMP_MIGRATE_INV_MAPPING
    having count(1) > 1
    group by Range_Map_External_ID);
    
   delete TEMP_MIGRATE_INV_MAPPING where SUBSCR_NO in (select  min(SUBSCR_NO) from TEMP_MIGRATE_INV_MAPPING
    having count(1) > 1
    group by ADDTL_NOTIF_EXTERNAL_ID);


update INVD_MAIN set MIGRATE = null where MIGRATE is not null;

update INVD_MAIN M set MIGRATE = 1  
  WHERE M.MIGRATE is null
  AND M.INVENTORY_TYPE_ID <> '301'
  AND EXTERNAL_ID NOT LIKE 'OLD%'
  and rownum <= 2000000;


update INVD_MAIN M set MIGRATE = 2  
  WHERE M.MIGRATE is null
  AND M.INVENTORY_TYPE_ID <> '301'
  AND EXTERNAL_ID NOT LIKE 'OLD%'
  and rownum <= 2000000;
  
update INVD_MAIN M set MIGRATE = 3  
  WHERE M.MIGRATE is null
  AND M.INVENTORY_TYPE_ID <> '301'
  AND EXTERNAL_ID NOT LIKE 'OLD%'
  and rownum <= 2000000;
  
update INVD_MAIN M set MIGRATE = 4  
  WHERE M.MIGRATE is null
  AND M.INVENTORY_TYPE_ID <> '301'
  AND EXTERNAL_ID NOT LIKE 'OLD%'
  and rownum <= 2000000;
  
update INVD_MAIN M set MIGRATE = 5  
  WHERE M.MIGRATE is null
  AND M.INVENTORY_TYPE_ID <> '301'
  AND EXTERNAL_ID NOT LIKE 'OLD%'
  and rownum <= 2000000;

update INVD_MAIN M set MIGRATE = 6  
  WHERE M.MIGRATE is null
  AND M.INVENTORY_TYPE_ID <> '301'
  AND EXTERNAL_ID NOT LIKE 'OLD%';
  
commit;
  

DROP TABLE TRMP_MIGRATE_LOG2;
CREATE TABLE TRMP_MIGRATE_LOG2
  AS (
SELECT v.view_id ,v.INVENTORY_ID, v.STATUS_ID  , m.SECONDARY_CODE  , m.EXTERNAL_ID , m.INVENTORY_TYPE_ID  , v.START_DATE_TIME , v.END_DATE_TIME,1 MIGRATE_LOG
from INVD_VIEWS v
left join INVD_MAIN m
on v.INVENTORY_ID = m.INVENTORY_ID);
CREATE INDEX TRMP_MIGRATE_INDEX1 ON TRMP_MIGRATE_LOG2 (MIGRATE_LOG);


UPDATE TRMP_MIGRATE_LOG2 SET MIGRATE_LOG = 2 
where MIGRATE_LOG = 1
AND ROWNUM <= 9200000;

UPDATE TRMP_MIGRATE_LOG2 SET MIGRATE_LOG = 3 
where MIGRATE_LOG = 1
AND ROWNUM <= 9200000;

UPDATE TRMP_MIGRATE_LOG2 SET MIGRATE_LOG = 4 
where MIGRATE_LOG = 1
AND ROWNUM <= 9200000;

UPDATE TRMP_MIGRATE_LOG2 SET MIGRATE_LOG = 5 
where MIGRATE_LOG = 1
AND ROWNUM <= 9200000;

